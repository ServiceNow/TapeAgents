exp_name: mcp_test_qwen_sync
exp_path: outputs/gaia/runs/${exp_name}/${now:%Y-%m-%d}/${now:%H-%M-%S}

llm:
  _target_: tapeagents.llms.TrainableLLM
  base_url: "http://localhost:8008"
  model_name: Qwen/Qwen3-8B
  use_litellm_tokenizer_fallback: true
  use_cache: false
  context_size: 32000
  parameters:
    max_tokens: 2048
    temperature: 0.7
    top_p: 0.8 # from https://huggingface.co/Qwen/Qwen3-8B for non-thinking mode. For thinking mode use t=0.6 p=0.95
    top_k: 20
    chat_template_kwargs:
      enable_thinking: false

environment:
  _target_: tapeagents.remote_environment.AsyncRemoteEnvironment
  server_url: http://localhost:8000

agent:
  _target_: tapeagents.agent.Agent
  name : web_agent
  max_iterations: 2
  llms:
    default: ${llm}
  templates:
    system_prompt: |
      You are an expert AI Agent trained to assist users with complex information processing tasks.
      Your role is to understand user queries and respond in a helpful and accurate manner.
      Keep your replies concise and direct. Prioritize clarity and avoid over-elaboration.
      Do not express emotions or opinions about user questions.
    allowed_tools: |
      You have access to the following tools:
      {tools_description}
    thought_format: |
      Important! Respond with the plain text, do not include any JSON or code.
      Do not output anything besides what I asked in this message.
    allowed_steps: |
      You have access to the following tools:
      {tools_description}
    format: >
      Output only a single JSON dict.
      Do not repeat the last thought again.
      If the last action does not change the observation, do not repeat it!
      DO NOT OUTPUT ANYTHING BESIDES THE JSON! DO NOT PLACE ANY COMMENTS INSIDE THE JSON.
      It will break the system that processes the output.

  nodes:
    - _target_: tapeagents.nodes.StandardNode
      name: plan
      system_prompt: ${agent.templates.system_prompt}
      guidance: |
        Write a concise multi-step plan explaining which steps should be performed to find the answer for the given task.
        Be specific about how each step should be performed. Only describe the intended actions here, do not perform them yet.
        Consider that next steps may depend on results of previous steps, so include conditional branching using "if" statements where needed.
        Start with the title "Plan". Every step should have short name and description.
        ${agent.templates.thought_format}
      steps_prompt: ${agent.templates.allowed_tools}

    - _target_: tapeagents.nodes.StandardNode
      name: select
      system_prompt: ${agent.templates.system_prompt}
      trim_obs_except_last_n: 1
      guidance: |
        Select the next step to do to move forward with the plan. Describe the expected effect of the proposed action.
        ${agent.templates.thought_format}
      steps_prompt: ${agent.templates.allowed_tools}

    - _target_: tapeagents.nodes.StandardNode
      name: act
      system_prompt: ${agent.templates.system_prompt}
      trim_obs_except_last_n: 1
      guidance: Then produce single function call for the next step. If the answer is ready, call GaiaAnswer.
      steps:
        - examples.gaia_agent.steps.GaiaAnswer
      use_known_actions: true
      use_function_calls: true

    - _target_: tapeagents.nodes.StandardNode
      name: summarize
      system_prompt: ${agent.templates.system_prompt}
      trim_obs_except_last_n: 1
      guidance: |
        Summarize last observation. If its an image, thoroughly describe it with all details.
        Describe the results of the last action and observed changes
        Do not hallucinate or make up any information, only describe what you see in the observation.
        Do not guess or assume action effects, describe only visible changes.
        ${agent.templates.thought_format}

    - _target_: tapeagents.nodes.StandardNode
      name: reflect
      system_prompt: ${agent.templates.system_prompt}
      trim_obs_except_last_n: 1
      guidance: |
        1. Evaluate the action's success, explain its effect on current step, overall plan and task solution.
        2. If the last action was not successful, describe errors and the possible reasons for failure.
        3. Check if the current plan step is finished.
        4. If the step is finished, update the following steps of the plan with new information and choose the next step.
        ${agent.templates.thought_format}
      next_node: select

split: validation
only_tasks: #[] # list of (level, task_num)
- [1, 0]
- [1, 1]
- [1, 2]
- [1, 3]
- [1, 4]
- [1, 5]
- [1, 6]
- [1, 7]
- [1, 8]
- [1, 9]
- [1, 10]
- [1, 11]
- [1, 12]
- [1, 13]
- [1, 14]
- [1, 15]
# - [1, 16]
# - [1, 17]
# - [1, 18]
# - [1, 19]
# - [1, 20]
# - [1, 21]
# - [1, 22]
# - [1, 23]
# - [1, 24]
# - [1, 25]
# - [1, 26]
# - [1, 27]
# - [1, 28]
# - [1, 29]
# - [1, 30]
# - [1, 31]

hydra:
  run:
    dir: ${exp_path}